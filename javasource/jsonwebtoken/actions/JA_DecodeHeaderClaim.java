// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package jsonwebtoken.actions;

import com.auth0.jwt.JWT;
import com.auth0.jwt.exceptions.JWTDecodeException;
import com.auth0.jwt.interfaces.Claim;
import com.auth0.jwt.interfaces.DecodedJWT;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class JA_DecodeHeaderClaim extends CustomJavaAction<java.lang.String>
{
	private java.lang.String token;
	private java.lang.String claim;

	public JA_DecodeHeaderClaim(IContext context, java.lang.String token, java.lang.String claim)
	{
		super(context);
		this.token = token;
		this.claim = claim;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		String logNode = jsonwebtoken.proxies.constants.Constants.getLogNode();
		String claimValue = null;
		
		// Create token decoder
		try {
		    DecodedJWT jwt = JWT.decode(token);
		    
		    // Get header claim
		    Claim claim = jwt.getHeaderClaim(this.claim);
		    
		    // Check if claim can be found
		    if (claim != null && !claim.isNull()) {
		    	
		    	// Store claim value
		    	claimValue = claim.asString();
		    } else {
		    	Core.getLogger(logNode).warn("Header claim '" + this.claim + "' not found within token");
		    }
		    
		} catch (JWTDecodeException e){
		    Core.getLogger(logNode).debug("Could not decode header claim: invalid token provided");
			
			// Token was invalid; re-throw the exception so that this can
			// be handled in an error handler within the microflow
			throw e;
		}
			    
		return claimValue;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_DecodeHeaderClaim";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}

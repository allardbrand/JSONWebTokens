// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package jsonwebtoken.proxies;

public class Claim
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject claimMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "JSONWebToken.Claim";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		ValueType("ValueType"),
		StringValue("StringValue"),
		IntegerValue("IntegerValue"),
		Claim_Token("JSONWebToken.Claim_Token");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Claim(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "JSONWebToken.Claim"));
	}

	protected Claim(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject claimMendixObject)
	{
		if (claimMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("JSONWebToken.Claim", claimMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a JSONWebToken.Claim");

		this.claimMendixObject = claimMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Claim.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static jsonwebtoken.proxies.Claim initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return jsonwebtoken.proxies.Claim.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static jsonwebtoken.proxies.Claim initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new jsonwebtoken.proxies.Claim(context, mendixObject);
	}

	public static jsonwebtoken.proxies.Claim load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return jsonwebtoken.proxies.Claim.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * Set value of ValueType
	 * @param valuetype
	 */
	public final jsonwebtoken.proxies.Enum_ClaimValueType getValueType()
	{
		return getValueType(getContext());
	}

	/**
	 * @param context
	 * @return value of ValueType
	 */
	public final jsonwebtoken.proxies.Enum_ClaimValueType getValueType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ValueType.toString());
		if (obj == null)
			return null;

		return jsonwebtoken.proxies.Enum_ClaimValueType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ValueType
	 * @param valuetype
	 */
	public final void setValueType(jsonwebtoken.proxies.Enum_ClaimValueType valuetype)
	{
		setValueType(getContext(), valuetype);
	}

	/**
	 * Set value of ValueType
	 * @param context
	 * @param valuetype
	 */
	public final void setValueType(com.mendix.systemwideinterfaces.core.IContext context, jsonwebtoken.proxies.Enum_ClaimValueType valuetype)
	{
		if (valuetype != null)
			getMendixObject().setValue(context, MemberNames.ValueType.toString(), valuetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.ValueType.toString(), null);
	}

	/**
	 * @return value of StringValue
	 */
	public final String getStringValue()
	{
		return getStringValue(getContext());
	}

	/**
	 * @param context
	 * @return value of StringValue
	 */
	public final String getStringValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.StringValue.toString());
	}

	/**
	 * Set value of StringValue
	 * @param stringvalue
	 */
	public final void setStringValue(String stringvalue)
	{
		setStringValue(getContext(), stringvalue);
	}

	/**
	 * Set value of StringValue
	 * @param context
	 * @param stringvalue
	 */
	public final void setStringValue(com.mendix.systemwideinterfaces.core.IContext context, String stringvalue)
	{
		getMendixObject().setValue(context, MemberNames.StringValue.toString(), stringvalue);
	}

	/**
	 * @return value of IntegerValue
	 */
	public final Integer getIntegerValue()
	{
		return getIntegerValue(getContext());
	}

	/**
	 * @param context
	 * @return value of IntegerValue
	 */
	public final Integer getIntegerValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.IntegerValue.toString());
	}

	/**
	 * Set value of IntegerValue
	 * @param integervalue
	 */
	public final void setIntegerValue(Integer integervalue)
	{
		setIntegerValue(getContext(), integervalue);
	}

	/**
	 * Set value of IntegerValue
	 * @param context
	 * @param integervalue
	 */
	public final void setIntegerValue(com.mendix.systemwideinterfaces.core.IContext context, Integer integervalue)
	{
		getMendixObject().setValue(context, MemberNames.IntegerValue.toString(), integervalue);
	}

	/**
	 * @return value of Claim_Token
	 */
	public final jsonwebtoken.proxies.Token getClaim_Token() throws com.mendix.core.CoreException
	{
		return getClaim_Token(getContext());
	}

	/**
	 * @param context
	 * @return value of Claim_Token
	 */
	public final jsonwebtoken.proxies.Token getClaim_Token(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		jsonwebtoken.proxies.Token result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Claim_Token.toString());
		if (identifier != null)
			result = jsonwebtoken.proxies.Token.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Claim_Token
	 * @param claim_token
	 */
	public final void setClaim_Token(jsonwebtoken.proxies.Token claim_token)
	{
		setClaim_Token(getContext(), claim_token);
	}

	/**
	 * Set value of Claim_Token
	 * @param context
	 * @param claim_token
	 */
	public final void setClaim_Token(com.mendix.systemwideinterfaces.core.IContext context, jsonwebtoken.proxies.Token claim_token)
	{
		if (claim_token == null)
			getMendixObject().setValue(context, MemberNames.Claim_Token.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Claim_Token.toString(), claim_token.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return claimMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final jsonwebtoken.proxies.Claim that = (jsonwebtoken.proxies.Claim) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "JSONWebToken.Claim";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

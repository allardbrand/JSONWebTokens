// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package jsonwebtokentest.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the JSONWebTokenTest module
	public static boolean aSt_AfterStartup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "JSONWebTokenTest.ASt_AfterStartup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void dL_JWT_VerifyTokenResult(IContext context, java.lang.String _token)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Token", _token);
			Core.execute(context, "JSONWebTokenTest.DL_JWT_VerifyTokenResult", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_VerifyToken_Decode(IContext context, jsonwebtokentest.proxies.VerifyToken _verifyToken)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("VerifyToken", _verifyToken == null ? null : _verifyToken.getMendixObject());
			Core.execute(context, "JSONWebTokenTest.MB_VerifyToken_Decode", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_VerifyToken_GetHeaderClaim(IContext context, jsonwebtokentest.proxies.VerifyToken _verifyToken)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("VerifyToken", _verifyToken == null ? null : _verifyToken.getMendixObject());
			Core.execute(context, "JSONWebTokenTest.MB_VerifyToken_GetHeaderClaim", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_VerifyToken_GetSingleClaim(IContext context, jsonwebtokentest.proxies.VerifyToken _verifyToken)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("VerifyToken", _verifyToken == null ? null : _verifyToken.getMendixObject());
			Core.execute(context, "JSONWebTokenTest.MB_VerifyToken_GetSingleClaim", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_VerifyToken_New(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "JSONWebTokenTest.MB_VerifyToken_New", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_VerifyToken_Verify(IContext context, jsonwebtokentest.proxies.VerifyToken _verifyToken)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("VerifyToken", _verifyToken == null ? null : _verifyToken.getMendixObject());
			Core.execute(context, "JSONWebTokenTest.MB_VerifyToken_Verify", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}
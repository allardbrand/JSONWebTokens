// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package jsonwebtokentest.proxies;

public class VerifyToken
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject verifyTokenMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "JSONWebTokenTest.VerifyToken";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Token("Token"),
		Secret("Secret"),
		ClaimName("ClaimName"),
		Algorithm("Algorithm");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public VerifyToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "JSONWebTokenTest.VerifyToken"));
	}

	protected VerifyToken(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject verifyTokenMendixObject)
	{
		if (verifyTokenMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("JSONWebTokenTest.VerifyToken", verifyTokenMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a JSONWebTokenTest.VerifyToken");

		this.verifyTokenMendixObject = verifyTokenMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'VerifyToken.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static jsonwebtokentest.proxies.VerifyToken initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return jsonwebtokentest.proxies.VerifyToken.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static jsonwebtokentest.proxies.VerifyToken initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new jsonwebtokentest.proxies.VerifyToken(context, mendixObject);
	}

	public static jsonwebtokentest.proxies.VerifyToken load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return jsonwebtokentest.proxies.VerifyToken.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Token
	 */
	public final String getToken()
	{
		return getToken(getContext());
	}

	/**
	 * @param context
	 * @return value of Token
	 */
	public final String getToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Token.toString());
	}

	/**
	 * Set value of Token
	 * @param token
	 */
	public final void setToken(String token)
	{
		setToken(getContext(), token);
	}

	/**
	 * Set value of Token
	 * @param context
	 * @param token
	 */
	public final void setToken(com.mendix.systemwideinterfaces.core.IContext context, String token)
	{
		getMendixObject().setValue(context, MemberNames.Token.toString(), token);
	}

	/**
	 * @return value of Secret
	 */
	public final String getSecret()
	{
		return getSecret(getContext());
	}

	/**
	 * @param context
	 * @return value of Secret
	 */
	public final String getSecret(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Secret.toString());
	}

	/**
	 * Set value of Secret
	 * @param secret
	 */
	public final void setSecret(String secret)
	{
		setSecret(getContext(), secret);
	}

	/**
	 * Set value of Secret
	 * @param context
	 * @param secret
	 */
	public final void setSecret(com.mendix.systemwideinterfaces.core.IContext context, String secret)
	{
		getMendixObject().setValue(context, MemberNames.Secret.toString(), secret);
	}

	/**
	 * @return value of ClaimName
	 */
	public final String getClaimName()
	{
		return getClaimName(getContext());
	}

	/**
	 * @param context
	 * @return value of ClaimName
	 */
	public final String getClaimName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ClaimName.toString());
	}

	/**
	 * Set value of ClaimName
	 * @param claimname
	 */
	public final void setClaimName(String claimname)
	{
		setClaimName(getContext(), claimname);
	}

	/**
	 * Set value of ClaimName
	 * @param context
	 * @param claimname
	 */
	public final void setClaimName(com.mendix.systemwideinterfaces.core.IContext context, String claimname)
	{
		getMendixObject().setValue(context, MemberNames.ClaimName.toString(), claimname);
	}

	/**
	 * Set value of Algorithm
	 * @param algorithm
	 */
	public final jsonwebtoken.proxies.Enum_Algorithm getAlgorithm()
	{
		return getAlgorithm(getContext());
	}

	/**
	 * @param context
	 * @return value of Algorithm
	 */
	public final jsonwebtoken.proxies.Enum_Algorithm getAlgorithm(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Algorithm.toString());
		if (obj == null)
			return null;

		return jsonwebtoken.proxies.Enum_Algorithm.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Algorithm
	 * @param algorithm
	 */
	public final void setAlgorithm(jsonwebtoken.proxies.Enum_Algorithm algorithm)
	{
		setAlgorithm(getContext(), algorithm);
	}

	/**
	 * Set value of Algorithm
	 * @param context
	 * @param algorithm
	 */
	public final void setAlgorithm(com.mendix.systemwideinterfaces.core.IContext context, jsonwebtoken.proxies.Enum_Algorithm algorithm)
	{
		if (algorithm != null)
			getMendixObject().setValue(context, MemberNames.Algorithm.toString(), algorithm.toString());
		else
			getMendixObject().setValue(context, MemberNames.Algorithm.toString(), null);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return verifyTokenMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final jsonwebtokentest.proxies.VerifyToken that = (jsonwebtokentest.proxies.VerifyToken) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "JSONWebTokenTest.VerifyToken";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
